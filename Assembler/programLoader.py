class ProgramLoader:
	debug = False
	userStart = 1000
	kernelStart = 1
	fill = 0

	kernelFile = "LINUKS.bin"


	outFile = "out.coe"
	inFile = ""

	def __init__(self, inFile, outFile, kernelFile):
		self.inFile = inFile
		if outFile:
			self.outFile = outFile
		if kernelFile:
			self.kernelFile = kernelFile

	def createFile(self):
		with open(outFile,'w') as dest:
			dest.write(""";File generated by the Schwap Program Loader
;This expects a memory unit that has a width of 16 and a length of 20480
;program created by Alexander Hirsschfeld (@d-qoi)
memory_initialization_radix=16;
memory_initialization_vector=
0000,
""")


	def writeKernel(self):
		linenum = 1
		with open(outFile,'a') as dest:
			with open(kernelFile,'r') as src:
				for line in src:
					dest.write(line[2:])
					dest.write(',\n')
					linenum += 1
			while (linenum < 4096):
				dest.write('0000,')


	def writeUser(self):
		code = []
		with open(inFile,'r') as src:
			for line in src:
				if '0x' in line:
					code.append(line[2:])
				else:
				

	def run():
		self.createFile()
		self.writeKernel()



if __name__ == "__main__":
	import sys
	helpPrint = """
Welcome to the Schwappable CPU Coe Creator!
Use:
	programLoader user.bin <outfile.coe> <kernel.bin>
"""
	if '-h' in sys.argv or 'help' in sys.argv:
        print(helpPrint) 
        sys.exit(0)

       inFile = ''
      

