Journal
=======

Milestone One
-------------

In this milestone we accomplished the following:

*	Decided on CPU Architecture, Load-Store
*	Decided on CPU Instruction set basics
	+	ALU instructions use the first source as the Destination
	+	There is a set of registers that is swappable, henceforth know as Schwappable Registers.
*	Wrote Assembly instructions for RelPrime

Alex and Wesley worked on the design of the CPU and Instruction set. Wesley created the documentation and Charlie scribed and provided arguments and counter arguments for ideas.  Andrew didn't show up or reply to emails.

Milestone Two
-------------

In this milestone we accomplished the following:

*	Implemented recommendations from previous milestone
*	Started design of components
	+	Created rough outline of the ALU on a whiteboard
		+	Created 4-bit carry look ahead adder in verilog
	+	Figured out how our "SchwapBox" will be implemented
*	Created RTL

Our primary meeting was on Sunday the 17th.  We also had more, smaller meetings throughout the week.  During meetings we all contributed to what we were discussing, which were primarily the RTL summary table, SchwapBox, and ALU.  Outside of the meetings Alex primarily worked on the assembler and almost finished it.  Andrew was also experimenting with an assembler, then implemented the 4-bit carry look ahead adder in verilog and wrote test cases for it.  Wesley did all of the documentation and journal.

Milestone Three
---------------

In this milestone we accomplished the following:

*	Updated documentation based on recommendations from the previous milestone
*	Designed data path
	+	Created data path without control on white board
	+	Added inputs from control elements
	+	Copied whiteboard into FireAlpaca to make it a convenient .PNG
*	Assembler is working and mostly bug free
*	Compiler is in progress
*	Emulator is in progress

We met Wednesday to work on homework and finish the assembler. A larger meeting took place Sunday to design the data path and finish up other work. Wesley finished about half of a compiler, did the documentation and tests, as well as provided markers and beautiful whiteboard drawing skills. Alex polished off the assembler. Charlie turned the data path into a useful picture, and did the journal. Andrew began progress on the emulator and is about halfway done. Alex, Charlie and Wesley designed the data path on the white board collaboratively.

Milestone Four
--------------

In this milestone we accomplished the following:

*	Updated documentation based on recommendations from the previous milestone
*	Created what the control unit should be outputting for what cycle
	+	Also have a draft of the control unit in verilog
*	Integration tests started in verilog
*	Assembler was rewritten
*	Compiler is in progress 
*	Emulator is working

We had our normal 12ish hour meeting on Sunday to work on the control unit for milestone 4.  Wesley made more progress on compiler, did the documentation, and journal.  Alex rewrote the assembler and started writing integration tests in verilog.  Charlie put the control unit into verilog. Andrew now has a working emulator called jSchpim, it has a similar (but better) interface to qtSpim.

Milestone Five
--------------

In this milestone we accomplished the following:

*	Updated the design docs based on recommendations :smiling_imp:
*	Updated the control unit for the changes that we made to the datapath
*	Updated the Datapath for slight optimizations and to remove extraneous registers
* 	implemented the separate components and created tests for each set
*	Finished the assembler worked on the emulator and compiler :smile_cat:
*	Fixed the Verilog code so that the RTL can be synthesized :triangular_flag_on_post:
*	attached everything together and we are currently working on debugging.

We had our regular Sunday meeting and finished most of the separate implementation and then spend Monday to Wednesday attaching everything together. Alex finished writing the Assembler and the Memory/PC/Regfile part of the CPU, Charlie finished the control unit, Andrew updated and worked on the assembler as well as finished the ALU, and Wesley L (:grinning:) worked on the documentation and compiler.